	/* Stylesheet is coded for MOBILE FIRST so @media query is for larger screens.*/
	
	body, h1, h2, h3, p, img, ul, li {
		border: 0;
		margin: 0;
		padding: 0;
	}

	/*the above is a very basic reset rule.  Every browser has a slightly different default for HTML tags.  By using this simple CSS reset, all the more glaring styles 
		are reset and can now be set to whatever properties that would suit your website best. */

	body {
		background: #edfbf1;
		
		font-family: Arial, Helvetica, sans-serif;
		/* the font family for all text on the web page is now either arial, helvetica or a sans-serif font if those two are not available */
		width: 100%;
		font-size: 100%;
		box-sizing: border-box;
	}
	/* Fixing header scaling difference caused by setting body font to 100% */
	h1 {
		margin-bottom: .8em;
		font-size: 1.625em;
	}

	h2 {
		font-size: 1.21875em;
	}

	h3 {
		font-size: 0.950625em;
	}

	p {
		font-size: 0.8125em;
		letter-spacing: 0.0325em;
		/* letter spacing sets the horizontal spacing (kerning) between letters in a block of text. */
		line-height: 1.6153846153846154em;
		/* line height sets the vertical spacing between lines of text. 21px converted to rem. */
	}
	
	div#header {
		text-align: center;
		box-sizing: border-box;
		background-color: #333;
		/* a more specific way to set a background color */
		background-image: url(images/headerbkgd.png);
		/* sets a background image in the header and the position it should sit */
		background-repeat: no-repeat;
		/* sets a background image to repeat, repeat-x, repeat-y or not at all as written in this rule */
		background-position: left bottom;
		/* sets a background image position */
		color: #fff;
		/* sets the the color of all header text to white */
		min-height: 20%;
		/* setting a minimum height of an element means that it can grow to be bigger, if there is a lot of content in it. However, if it doesn't have enough content, it will be at the very least (in this example) 130 pixels tall */
		padding: 10% 10% 2%;
		margin: 0;
		/* by setting a padding, the content within a HTML element will not touch the edges of that element (by adding padding to an element, it actually makes that element appear wider and/or taller.  In this case, the header div is now 15px wider and taller on each side. */
		width: 100%;
		/* sets the width of the div to 900px. Remember that if you add padding to this element it will increase the size by the number of pixels in the padding. In this example the width is 900px and we have 15px to the left and right so the total width of the header will be (870px + 15px+15px=930px */
	}
	
	ul.navigation {
		font-size: 0.8125em;
		display: flex;
		justify-content: center;
		list-style: none;
		/* this removes the bullets from list elements */
		margin: 2rem 0 1rem;
		/* giving the ul a top margin of 20px */
	}
	
	ul.navigation li {
		display: inline-block;
		/* an inline block element can have width and height applied to it / and if not, they only take up as much space as the content within allows */
		margin: .5rem;
		/* this code adds a 3px margin to the left and right of the list elements, and 5px to the bottom of the list elements */
	}
	
	ul.navigation li a {
		background: #4a4a4a;
		/* this is a dark grey background for the link */
		color: #fff;
		/* this makes the link text white */
		border-radius: .125em;
		border: 1px solid #595959;
		/* this adds a light grey solid border of 1px width around the link */
		padding: 0.8rem;
		/* as the name implies, this adds extra padding around the link, so that the borders don't bump up against the link text */
		text-decoration: none;
		/* this removes the normal underline that links usually have */
	}
	
	div.content {
		display: grid;
		grid-template-columns: 100%;
		grid-template-rows: 100%;
		margin: 5% 2% 1%;
		/* this adds a margin of 15px to the top and bottom of the div with the class of content.  The auto margin applies to the left and right side of the div which is what centers the div in the middle of the page. */
		animation: fade-in 2s linear forwards;
	}
	
	@keyframes fade-in {
		from {opacity: 0;}
		to {opacity: 1;;}
	}

	div.col-right h1 {
		text-align: center;
	}

	div.sidebar-left a {
		color: #445e64;
		/* this redefines all links in the left sidebar to this new color, as opposed to the default blue link color */
	}
	
	.list {
		font-size: 0.8125em;
		padding-top: 0.8rem;
		/* adds spacing to the bottom of the list to further divide the content for eaier segragation */
	}
	
	.list li {
		margin-bottom: 1em;
		list-style-type: none;
	}
	
	.list li a {
		font-weight: bold;
		/* this makes all anchor classes with .list bold without using <strong>  */
		text-transform: uppercase;
		/* this makes all anchor classes with .list uppercase  */
	}
	
	div#footer {
		grid-column: auto;
		background-color: #c4d5d9;
		padding: 1em;
		text-align: center;
	}

/*================== Desktop/Laptop Styles ===================*/
/* @media query for screens 1024px and larger (laptops/desktops) */
	
	@media screen and (min-width: 1024px) {
		
		div#header {
			text-align: left;
			-webkit-border-bottom-right-radius: 4px;
			-webkit-border-bottom-left-radius: 4px;
			-moz-border-radius-bottomright: 4px;
			-moz-border-radius-bottomleft: 4px;
			border-bottom-right-radius: 4px;
			border-bottom-left-radius: 4px;
			/* these 6 lines of border-radius code make rounded corners for the bottom work in firefox, safari, chrome, opera and IE9 */
			margin: 0 auto;
			/* by declaring a width on any block element (like a div), giving it a css property of margin:0 auto will center that block element on page */
			height: 190px;
			/* setting a minimum height of an element means that it can grow to be bigger, if there is a lot of content in it. However, if it doesn't have enough content, it will be at the very least (in this example) 130 pixels tall */
			padding: 45px 15px 15px;
			/* by setting a padding, the content within a HTML element will not touch the edges of that element (by adding padding to an element, it actually makes that element appear wider and/or taller.  In this case, the header div is now 15px wider and taller on each side. */
			width: 900px;
			/* sets the width of the div to 900px. Remember that if you add padding to this element it will increase the size by the number of pixels in the padding. In this example the width is 900px and we have 15px to the left and right so the total width of the header will be (870px + 15px+15px=930px */
		}
		
		#header h1 {
			margin-bottom: 0;
		}

		ul.navigation {
			display: block;
			margin-top: 20px;
			/* giving the ul a top margin of 20px */
		}
		
		ul.navigation li {
			margin: 0 3px 5px;
			/* this code adds a 3px margin to the left and right of the list elements, and 5px to the bottom of the list elements */
		}
		
		ul.navigation li a {
			border-radius: 2px;
			-moz-border-radius: 2px;
			-webkit-border-radius: 2px;
			padding: 3px 10px;
			/* as the name implies, this adds extra padding around the link, so that the borders don't bump up against the link text */
		}
		
		ul.navigation li a:hover {
			background-color: #000;
			/*this is a hover pseudo class.  By designating a different background color, than the class for the a tag above, when a mouse hovers over these particular links, in the navigation bar, the background color will change to what's defined here */
			
		}
		
		div.content {
			grid-template-columns: 220px 660px;
			grid-column-gap: 20px;
			margin: 15px auto 0;
			/* this adds a margin of 15px to the top and bottom of the div with the class of content.  The auto margin applies to the left and right side of the div which is what centers the div in the middle of the page. */
			width: 900px;
		}
		
		div.col-right {
			grid-column: 2/3;
			grid-row: 1/2
		}

		div.col-right h1 {
			text-align: left;
		}
		/* aligning the h1 to the left when on lt or dt. */
		
		.flex-box {
			display: flex;
			flex-direction: row;
		}

			.flex-box img {
				padding: 0 .625rem .625rem 0;
			}

		div.sidebar-left {
			grid-column: 1/2;
			grid-row: 1/2;
			padding: 0 10px;
			/* when floating content next to each other, applying set widths will make the content play nice with each other. Change the width of the siebar, or take away the width of the above "div.col-right" and see what happens to get a better idea of how widths effect floats */
		}
		
		div.sidebar-left a:hover {
			text-decoration: none
		}
		
		/* when hovering over a link, in the sidebar, this turns off the underline */

		.mobile-break {
			display: none;
		}
		
		.list {
			border-bottom: 1px solid #c3dce1;
			/* adds a border to the bottom of the list to further divide the content for eaier segragation */
			padding: 0 0 20px 15px;
			/* adds spacing to the bottom of the list to further divide the content for eaier segragation */
		}
		
		.list li {
			margin-bottom: 10px;
			list-style-type: initial;
		}
		
		.list li a {
			font-size: 11px;
			/* this makes all anchor classes with .list applied 11px tall  */
		}
		
		div#footer {
			margin: 0 auto;
			width: 900px;
		}
	}

	 .footer {
        text-align: center;
 }